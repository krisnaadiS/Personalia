<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                    xmlns:local="clr-namespace:PersonaliaLPDKuta">
    <Style TargetType="{x:Type telerik:RadButton}" x:Key="btnGreen">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="#49B25A" />
        <Setter Property="BorderBrush" Value="#49B25A" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10 10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <mat:FluentControl EffectMode="Glow"
                                           BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3BAC4E" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#3BAC4E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <mat:FluentControl EffectMode="Glow"
                                           BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadButton}" x:Key="btnRed">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=MainBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10 10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <mat:FluentControl EffectMode="Glow"
                                           BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadButton}" x:Key="btnTransparent">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <mat:FluentControl EffectMode="Glow"
                                           BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadToggleButton}" x:Key="btnToggleTransparent">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <mat:FluentControl EffectMode="Glow"
                                           BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}" />
                        </mat:FluentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadPanelBarItemStyle" TargetType="{x:Type telerik:RadPanelBarItem}">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.MouseOverBrush}}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.PressedBrush}}"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="ExpanderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="telerik:GlyphAdorner.ShowGlyphInDesignTime" Value="True"/>
                    <Setter Property="Grid.Column" Value="5"/>
                    <Setter Property="Margin" Value="9,0"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.IconBrush}}"/>
                    <Setter Property="Text" Value="&#xE015;"/>
                    <Setter Property="FontFamily" Value="/Telerik.Windows.Controls;component/Themes/Fonts/TelerikWebUI.ttf#TelerikWebUI"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="FontStyle" Value="Normal"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                    <Grid x:Name="RootElement">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="HeaderRow" Background="Transparent" Margin="0" MinHeight="{TemplateBinding MinHeight}">
                            <Border x:Name="BorderVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <mat:FluentControl x:Name="Fluent" BorderThickness="0,1" IsSmartClipped="True" Padding="5,0,0,0">
                                <ContentControl x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </mat:FluentControl>
                        </Grid>
                        <Grid x:Name="ItemsContainer" Grid.Row="1" Visibility="Collapsed">
                            <ItemsPresenter/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ItemsContainer" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Header" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.DisabledOpacity}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="Header" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.AccentPressedBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="Fluent" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding (mat:MaterialAssist.MouseOverBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="Fluent" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding (mat:MaterialAssist.PressedBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.AlternativeBrush}}"/>
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.BasicBrush}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik:PanelBarPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Level" Value="1">
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="Padding" Value="5,9"/>
                <Setter Property="Background" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.PrimaryBackgroundBrush}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type telerik:RadPanelBarItem}">
                            <Grid x:Name="RootElement">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="BorderVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="LowerBorderVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{x:Null}" Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                                <mat:FluentControl x:Name="Fluent" BorderThickness="0,1" IsSmartClipped="True">
                                    <Grid x:Name="HeaderRow" Background="#01FFFFFF" UseLayoutRounding="True" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="arrow" Style="{TemplateBinding ExpanderStyle}" Visibility="Collapsed"/>
                                        <ContentControl x:Name="Header" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </mat:FluentControl>
                                <Grid x:Name="ItemsContainer" Margin="0,0,0,1" Grid.Row="1" Visibility="Collapsed">
                                    <telerik:LayoutTransformControl x:Name="transformationRoot" IsTabStop="False">
                                        <ItemsPresenter/>
                                    </telerik:LayoutTransformControl>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="Text" TargetName="arrow" Value="&#xE013;"/>
                                    <Setter Property="Foreground" TargetName="Header" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.AccentBrush}}"/>
                                    <Setter Property="Foreground" TargetName="arrow" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.AccentBrush}}"/>
                                    <Setter Property="Visibility" TargetName="ItemsContainer" Value="Visible"/>
                                    <Setter Property="FontWeight" TargetName="Header" Value="SemiBold"/>
                                    <Setter Property="Visibility" TargetName="LowerBorderVisual" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Header" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.DisabledOpacity}}"/>
                                    <Setter Property="Opacity" TargetName="arrow" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.DisabledOpacity}}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" TargetName="Header" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.AccentPressedBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="Fluent" Value="True">
                                    <Setter Property="Background" Value="{Binding (mat:MaterialAssist.MouseOverBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" SourceName="Fluent" Value="True">
                                    <Setter Property="Background" Value="{Binding (mat:MaterialAssist.PressedBrush), Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="{telerik:FluentResource ResourceKey={x:Static telerik:FluentResourceKey.FontSizeL}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>